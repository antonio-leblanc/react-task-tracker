{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","date","Tasks","tasks","map","t","AddTask","useState","setText","setdate","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","console","log","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bbfdee6.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n  const onClick = () => {\r\n    console.log('Clicked')\r\n  }\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button \r\n      color={showAdd? 'red':'green'}\r\n      text={showAdd? 'Close':'Add'}\r\n      onClick={onAdd}></Button>\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title : \"Antonas Task Tracker\"\r\n}\r\n\r\n// CSS IN JS if we want dynamic css\r\n/* <h1 style={headingStyle}>Task Tracker {props.title}</h1>\r\n\r\nconst headingStyle = {\r\n  color:'green',\r\n  backgroundColor: 'yellow'\r\n} */\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n  return (\r\n    <div\r\n    className={`task ${task.reminder ? 'reminder' : ''}`}\r\n    onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n        onClick = {()=> onDelete(task.id)}\r\n        style={{color:'red', cursor:'pointer'}}></FaTimes>\r\n      </h3>\r\n      <p>{task.date}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n ","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  return (\r\n    <>\r\n      {tasks.map((t) => (\r\n        <Task key={t.id} task={t} onDelete={onDelete} onToggle={onToggle}></Task>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n// Component level state\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [date, setdate] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, date, reminder })\r\n\r\n    setText('')\r\n    setdate('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>date & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add date & Time'\r\n          value={date}\r\n          onChange={(e) => setdate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import {useState} from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id:1,\n      text: 'Learn react creating this task manager',\n      date: '21/04/21 morning',\n      reminder: false\n    },\n    {\n      id:2,\n      text: 'Create new react personal site',\n      date: '21/04/21 afternoon',\n      reminder: true\n    },\n  ])\n\n  const deleteTask = (id) => {\n    console.log('delete', id)\n    setTasks(tasks.filter((t) => t.id !== id))\n  }\n\n  const toggleTask = (id) => {\n    console.log('toggle', id)\n    setTasks(tasks.map((t) => \n    t.id === id ? {...t, reminder:!t.reminder}\n    : t\n    ))\n    console.log('tasks', tasks)\n\n  }\n\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1 \n    const newTask = {id, ...task}\n    console.log(newTask)\n    setTasks([...tasks, newTask])\n  }\n\n  return (\n    <div className=\"container\">\n      \n      <Header\n      onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask}\n      >\n      </Header>\n      {showAddTask && <AddTask onAdd={addTask}></AddTask>}\n      {tasks.length >0? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleTask}></Tasks>\n      ): ('No tasks')}\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import logo from './logo.svg';\n/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}